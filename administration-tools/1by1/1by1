#!/bin/bash

# Define a path to use if 'sshpass' is not defined
PATH="/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin"

# Define the location of sshpass
ask="/usr/local/bin/sshpass"

# Command to execute 'dostuff' on remote host
cmd="chmod +x /tmp/dostuff; /bin/bash /tmp/dostuff"

# Workhorse
doit()
{
	sleep 2
	echo ""
	echo "Working on ${1}"
	"${ask}" -p "${2}" scp dostuff root@"${1}":/tmp

#	"${ask}" -p "${2}" scp files-to-cp/ntp-client root@"${1}":/tmp

	"${ask}" -p "${2}" ssh -l root -o StrictHostKeyChecking=no "${1}" "${cmd}" < /dev/null | tee -a log

#	"${ask}" -p "${2}" scp root@"${1}":/tmp/*.access-log `pwd`/logs/
}

# Check for 'list' argument
# Please see 'lists' folder for available options
# Optionally specify 'one' machine (must be valid IP)
if [ -n "${1}" ]; then
	if [ -f "lists/${1}" ]; then
		list=lists/"${1}"
	else
		if [[ "${1}" =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
			read -sp "Enter root password: " pass
			doit "${1}" "${pass}"
			exit
		else
			echo "List of machines invalid"
			exit
		fi
	fi
else
	list=lists/all
fi

# Prompt for root password while masking from 'ps'
read -sp "Enter root password: " pass

# Loop over specified 'list', copy 'dostuff' & execute it
while read host; do
	if [ -n "${host}" ]; then
		doit "${host}" "${pass}"
	fi
done < "${list}"
